[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement nhs.rcommunity@nhs.net. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 NHSRpostcodetools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/NHSRpostcodetools.html","id":"checking-for-valid-postcodes","dir":"Articles","previous_headings":"","what":"Checking for valid postcodes","title":"NHSRpostcodetools","text":"vectors tibbles can passed functions. Starting vector postcodes first terminated, second valid third invalid.","code":"library(NHSRpostcodetools)"},{"path":"/articles/NHSRpostcodetools.html","id":"a-vector-of-postcodes","dir":"Articles","previous_headings":"Checking for valid postcodes","what":"A vector of postcodes","title":"NHSRpostcodetools","text":"Join vector postcode data","code":"# a vector postcodes <- c(\"HD1 2UT\", \"HD1 2UU\", \"HD1 2UV\") postcode_data_join(postcodes, fix_invalid = TRUE) #> ℹ The following postcodes are terminated: #>   HD1 2UT #>   and have been replaced with these current postcodes: #>   HD1 2RD #> ℹ The following postcodes are invalid: #>   HD1 2UV #>   and have been replaced with these nearby postcodes: #>   HD1 2UD #> # A tibble: 3 × 38 #>   postcode new_postcode result_type   quality eastings northings country nhs_ha  #>   <chr>    <chr>        <chr>           <int>    <int>     <int> <chr>   <chr>   #> 1 HD1 2UT  HD1 2RD      terminated          1   414639    416430 England Yorksh… #> 2 HD1 2UU  HD1 2UU      valid               1   414433    416422 England Yorksh… #> 3 HD1 2UV  HD1 2UD      autocompleted       1   414371    416317 England Yorksh… #> # ℹ 30 more variables: longitude <dbl>, latitude <dbl>, #> #   european_electoral_region <chr>, primary_care_trust <chr>, region <chr>, #> #   lsoa <chr>, msoa <chr>, incode <chr>, outcode <chr>, #> #   parliamentary_constituency <chr>, admin_district <chr>, parish <chr>, #> #   date_of_introduction <chr>, admin_ward <chr>, ccg <chr>, nuts <chr>, #> #   pfa <chr>, admin_district_code <chr>, admin_county_code <chr>, #> #   admin_ward_code <chr>, parish_code <chr>, …"},{"path":"/articles/NHSRpostcodetools.html","id":"a-tibble-of-postcodes","dir":"Articles","previous_headings":"Checking for valid postcodes","what":"A tibble of postcodes","title":"NHSRpostcodetools","text":"tibble data frame code extract pass functions package postcode column needs recoded postcodes order recognised. Note parameter fix_invalid = TRUE defaults TRUE: set FALSE message appears new_postcode populated NA.","code":"test_df1 <- dplyr::tibble(   place = paste0(\"place_\", seq(3L)),   postcode = postcodes ) postcode_data_join(test_df1, fix_invalid = TRUE) #> ℹ The following postcodes are terminated: #>   HD1 2UT #>   and have been replaced with these current postcodes: #>   HD1 2RD #> ℹ The following postcodes are invalid: #>   HD1 2UV #>   and have been replaced with these nearby postcodes: #>   HD1 2UD #> # A tibble: 3 × 39 #>   place   postcode new_postcode result_type   quality eastings northings country #>   <chr>   <chr>    <chr>        <chr>           <int>    <int>     <int> <chr>   #> 1 place_1 HD1 2UT  HD1 2RD      terminated          1   414639    416430 England #> 2 place_2 HD1 2UU  HD1 2UU      valid               1   414433    416422 England #> 3 place_3 HD1 2UV  HD1 2UD      autocompleted       1   414371    416317 England #> # ℹ 31 more variables: nhs_ha <chr>, longitude <dbl>, latitude <dbl>, #> #   european_electoral_region <chr>, primary_care_trust <chr>, region <chr>, #> #   lsoa <chr>, msoa <chr>, incode <chr>, outcode <chr>, #> #   parliamentary_constituency <chr>, admin_district <chr>, parish <chr>, #> #   date_of_introduction <chr>, admin_ward <chr>, ccg <chr>, nuts <chr>, #> #   pfa <chr>, admin_district_code <chr>, admin_county_code <chr>, #> #   admin_ward_code <chr>, parish_code <chr>, … postcode_data_join(test_df1) #> ℹ The following postcodes are terminated: #>   HD1 2UT #>   and have been replaced with these current postcodes: #>   HD1 2RD #> ℹ The following postcodes are invalid: #>   HD1 2UV #>   and have been replaced with these nearby postcodes: #>   HD1 2UD #> # A tibble: 3 × 39 #>   place   postcode new_postcode result_type   quality eastings northings country #>   <chr>   <chr>    <chr>        <chr>           <int>    <int>     <int> <chr>   #> 1 place_1 HD1 2UT  HD1 2RD      terminated          1   414639    416430 England #> 2 place_2 HD1 2UU  HD1 2UU      valid               1   414433    416422 England #> 3 place_3 HD1 2UV  HD1 2UD      autocompleted       1   414371    416317 England #> # ℹ 31 more variables: nhs_ha <chr>, longitude <dbl>, latitude <dbl>, #> #   european_electoral_region <chr>, primary_care_trust <chr>, region <chr>, #> #   lsoa <chr>, msoa <chr>, incode <chr>, outcode <chr>, #> #   parliamentary_constituency <chr>, admin_district <chr>, parish <chr>, #> #   date_of_introduction <chr>, admin_ward <chr>, ccg <chr>, nuts <chr>, #> #   pfa <chr>, admin_district_code <chr>, admin_county_code <chr>, #> #   admin_ward_code <chr>, parish_code <chr>, … postcode_data_join(test_df1, fix_invalid = FALSE) #> ℹ The following postcodes are invalid: #>   HD1 2UT #>   but have not been successfully replaced with valid codes. #>   The following postcodes are invalid: #>   HD1 2UV #>   but have not been successfully replaced with valid codes. #> # A tibble: 3 × 39 #>   place   postcode new_postcode result_type quality eastings northings country #>   <chr>   <chr>    <chr>        <chr>         <int>    <int>     <int> <chr>   #> 1 place_1 HD1 2UT  NA           NA               NA       NA        NA NA      #> 2 place_2 HD1 2UU  HD1 2UU      valid             1   414433    416422 England #> 3 place_3 HD1 2UV  NA           NA               NA       NA        NA NA      #> # ℹ 31 more variables: nhs_ha <chr>, longitude <dbl>, latitude <dbl>, #> #   european_electoral_region <chr>, primary_care_trust <chr>, region <chr>, #> #   lsoa <chr>, msoa <chr>, incode <chr>, outcode <chr>, #> #   parliamentary_constituency <chr>, admin_district <chr>, parish <chr>, #> #   date_of_introduction <chr>, admin_ward <chr>, ccg <chr>, nuts <chr>, #> #   pfa <chr>, admin_district_code <chr>, admin_county_code <chr>, #> #   admin_ward_code <chr>, parish_code <chr>, …"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zoë Turner. Maintainer, author. Fran Barton. Author. NHS-R community. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Turner Z, Barton F (2024). NHSRpostcodetools: Package work England Postcodes R. R package version 0.0.0.9001, https://github.com/nhs-r-community/NHSRpostcodetools.","code":"@Manual{,   title = {NHSRpostcodetools: Package to work with England Postcodes in R},   author = {Zoë Turner and Fran Barton},   year = {2024},   note = {R package version 0.0.0.9001},   url = {https://github.com/nhs-r-community/NHSRpostcodetools}, }"},{"path":"/index.html","id":"nhsrpostcodetools","dir":"","previous_headings":"","what":"Package to work with England Postcodes in R","title":"Package to work with England Postcodes in R","text":"package useful functions related working Postcodes within (currently) England using postcodes.io, API Open Geography Portal maintained ONS (Office National Statistics).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Package to work with England Postcodes in R","text":"can install development version NHSRpostcodetools GitHub : find functions vignette Getting Started","code":"# install.packages(\"devtools\") devtools::install_github(\"nhs-r-community/NHSRpostcodetools\")"},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Package to work with England Postcodes in R","text":"Please see guidance contribute. project released Contributor Code Conduct. contributing project, agree abide terms. simplest way contribute raise issue detailing feature functionality like see added, unexpected behaviour bugs experienced.","code":""},{"path":"/reference/NHSRpostcodetools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"NHSRpostcodetools: Package to work with England Postcodes in R — NHSRpostcodetools-package","title":"NHSRpostcodetools: Package to work with England Postcodes in R — NHSRpostcodetools-package","text":"Functions related England Postcodes geographical areas.","code":""},{"path":[]},{"path":"/reference/NHSRpostcodetools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"NHSRpostcodetools: Package to work with England Postcodes in R — NHSRpostcodetools-package","text":"Maintainer: Zoë Turner zoe.turner3@nhs.net (ORCID) Authors: Fran Barton fbarton@alwaysdata.net (ORCID) contributors: NHS-R community nhs.rcommunity@nhs.net [copyright holder]","code":""},{"path":"/reference/batch_it.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch a vector or list into a list of elements with a maximum size — batch_it","title":"Batch a vector or list into a list of elements with a maximum size — batch_it","text":"Batch vector list list elements maximum size","code":""},{"path":"/reference/batch_it.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch a vector or list into a list of elements with a maximum size — batch_it","text":"","code":"batch_it(x, batch_size)"},{"path":"/reference/batch_it.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch a vector or list into a list of elements with a maximum size — batch_it","text":"x vector list batch_size numeric. size (length) batches create. single positive integer value (see Examples).","code":""},{"path":"/reference/batch_it.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch a vector or list into a list of elements with a maximum size — batch_it","text":"","code":"# ---- batch_it(letters, 6L) #> [[1]] #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" #>  #> [[2]] #> [1] \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" #>  #> [[3]] #> [1] \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" #>  #> [[4]] #> [1] \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" #>  #> [[5]] #> [1] \"y\" \"z\" #>  batch_it(letters, 27L) #> [[1]] #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>"},{"path":"/reference/postcode_data_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Use postcodes.io to get postcode data — postcode_data_join","title":"Use postcodes.io to get postcode data — postcode_data_join","text":"Use postcodes.io get postcode data","code":""},{"path":"/reference/postcode_data_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use postcodes.io to get postcode data — postcode_data_join","text":"","code":"postcode_data_join(x, var = \"postcode\", fix_invalid = TRUE)"},{"path":"/reference/postcode_data_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use postcodes.io to get postcode data — postcode_data_join","text":"x data frame column postcodes, vector postcodes. var String symbol. name variable data frame comprises postcodes submitted. acceptable symbol standard string. fix_invalid Boolean, default TRUE. Whether try fix postcodes found (potentially terminated codes, contain typos).","code":""},{"path":"/reference/postcode_data_join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use postcodes.io to get postcode data — postcode_data_join","text":"","code":"postcodes <- c(\"HD1 2UT\", \"HD1 2UU\", \"HD1 2UV\") test_df1 <- dplyr::tibble(   place = paste0(\"place_\", 1:3),   postcode = postcodes ) postcode_data_join(test_df1, fix_invalid = TRUE) #> ℹ The following postcodes are terminated: #>   HD1 2UT #>   and have been replaced with these current postcodes: #>   HD1 2RD #> ℹ The following postcodes are invalid: #>   HD1 2UV #>   and have been replaced with these nearby postcodes: #>   HD1 2UD #> # A tibble: 3 × 39 #>   place   postcode new_postcode result_type   quality eastings northings country #>   <chr>   <chr>    <chr>        <chr>           <int>    <int>     <int> <chr>   #> 1 place_1 HD1 2UT  HD1 2RD      terminated          1   414639    416430 England #> 2 place_2 HD1 2UU  HD1 2UU      valid               1   414433    416422 England #> 3 place_3 HD1 2UV  HD1 2UD      autocompleted       1   414371    416317 England #> # ℹ 31 more variables: nhs_ha <chr>, longitude <dbl>, latitude <dbl>, #> #   european_electoral_region <chr>, primary_care_trust <chr>, region <chr>, #> #   lsoa <chr>, msoa <chr>, incode <chr>, outcode <chr>, #> #   parliamentary_constituency <chr>, admin_district <chr>, parish <chr>, #> #   date_of_introduction <chr>, admin_ward <chr>, ccg <chr>, nuts <chr>, #> #   pfa <chr>, admin_district_code <chr>, admin_county_code <chr>, #> #   admin_ward_code <chr>, parish_code <chr>, …"}]
